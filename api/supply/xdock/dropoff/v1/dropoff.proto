syntax = "proto3";

package ozon.whc.api.supply.xdock.dropoff.v1;

option go_package = "gitlab.ozon.ru/whc/go/api/supply/pkg/api/supply/xdock/dropoff/v1;v1";
option csharp_namespace = "Ozon.Whc.Go.Api.Supply.XDock.Dropoff.v1";

import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";
import "gitlab.ozon.ru/whc/go/api/supply/api/constants/constants.proto";
import "google/protobuf/wrappers.proto";

service Dropoff {
    // Валидация поставки для начала отгрузки
    // Response Codes - 0, 3, 9, 5
    rpc V1ValidateSupplyToUnload (V1ValidateSupplyToUnloadRequest) returns (V1ValidateSupplyToUnloadResponse);
    // Завершить отгрузку поставки
    // Response Codes - 0, 3, 9, 5
    rpc V1FinishUnloading (V1FinishUnloadingRequest) returns (V1FinishUnloadingResponse);
    // Получить список причин для отказа в отгрузке поставки
    // Response Codes - 0
    rpc V1GetUnloadRejectionReasons (V1GetUnloadRejectionReasonsRequest) returns (V1GetUnloadRejectionReasonsResponse);
    // Получить причину для отказа в отгрузке поставки
    // Response Codes - 0
    rpc V1GetUnloadRejectionReason (V1GetUnloadRejectionReasonRequest) returns (V1GetUnloadRejectionReasonResponse);
    // Отказать в отгрузке поставки
    // Response Codes - 0, 9, 3, 5
    rpc V1DeclineUnloading (V1DeclineUnloadingRequest) returns (V1DeclineUnloadingResponse);
}// Приемка поставки на дропоффе


// ---------- V1ValidateSupplyToUnload --------------

message V1ValidateSupplyToUnloadRequest {
    int64 supply_id = 1 [(validate.rules).int64.gt = 0];
    int64 warehouse_id = 2 [(validate.rules).int64.gt = 0];
}

message V1ValidateSupplyToUnloadResponse {
    repeated Cargo cargos = 1;

    message Cargo {
        int64 id = 1;
        string barcode = 2;
        supply_constants.CargoType.Enum type = 3;
    }
}

// ---------- V1FinishUnloading --------------

message V1FinishUnloadingRequest {
    int64 supply_id = 1 [(validate.rules).int64.gt = 0];
    int64 warehouse_id = 2 [(validate.rules).int64.gt = 0];
    repeated int64 cargo_ids = 3 [(validate.rules).repeated = {unique: true, min_items: 1, items: {int64: {gt: 0}}}];
    string user_name = 4 [(validate.rules).string.min_len = 1];
}

message V1FinishUnloadingResponse{}

// ---------- V1GetUnloadRejectionReasons --------------

message V1GetUnloadRejectionReasonsRequest{
    Filter filter = 1;

    message Filter {
        // включить в результат удаленные причины отказа в выгрузке
        bool include_deleted = 1;

        // отфильтровать по идентификаторам
        repeated int64 reason_ids = 2 [(validate.rules).repeated = { unique: true, ignore_empty: true, items: { int64: { gte: 1 } } }];
    }
}

message V1GetUnloadRejectionReasonsResponse {
    repeated RejectionReason rejection_reasons = 1;

    message RejectionReason {
        int32 id = 1;
        string text = 2;
        bool can_edit = 3;
        bool is_deleted = 4;
    }
}

// ---------- V1GetUnloadRejectionReason --------------

message V1GetUnloadRejectionReasonRequest{
    int64 id = 1 [(validate.rules).int64.gt = 0];
}

message V1GetUnloadRejectionReasonResponse {
    int32 id = 1;
    string text = 2;
    bool can_edit = 3;
    bool is_deleted = 4;
}

// ---------- V1DeclineUnloading --------------

message V1DeclineUnloadingRequest {
    int64 supply_id = 1 [(validate.rules).int64.gt = 0];
    int64 warehouse_id = 2 [(validate.rules).int64.gt = 0];
    int32 rejection_reason_id = 3 [(validate.rules).int32.gt = 0];
    string user_name = 4 [(validate.rules).string.min_len = 1];
}

message V1DeclineUnloadingResponse{

}